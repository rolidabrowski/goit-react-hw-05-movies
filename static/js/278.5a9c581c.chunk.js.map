{"version":3,"file":"static/js/278.5a9c581c.chunk.js","mappings":"+QAMaA,EAAS,WACpB,IAAAC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAkCL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA4Cb,EAAAA,EAAAA,UAAS,IAAGc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAjDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,GAAwCC,EAAAA,EAAAA,IAAgB,CACtDC,MAAO,KACPC,GAAAlB,EAAAA,EAAAA,GAAAe,EAAA,GAFKI,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAS9BD,GALSI,EAAAA,EAAAA,UACb,kBAAMC,OAAOC,aAAWC,EAAAA,EAAAA,GAAKL,GAAc,GAC3C,CAACA,IAGGF,OAENQ,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEsBC,EAAAA,EAAAA,IAAiBlB,GAAO,KAAD,EAApCa,EAAIE,EAAAI,KACV9B,GAAa,GACbJ,EAAU4B,GAAME,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEhBtB,EAAQsB,EAAAK,IAAQ,QAEI,OAFJL,EAAAC,KAAA,GAEhB3B,GAAa,GAAO0B,EAAAM,OAAA,6BAAAN,EAAAO,OAAA,GAAAV,EAAA,uBARxBH,EAWF,GAAG,CAACT,KAEJQ,EAAAA,EAAAA,YAAU,WACR,IAAMe,EAAiB,OAANvC,QAAM,IAANA,OAAM,EAANA,EAAQwC,QAAO,SAAAC,GAAK,IAAAC,EAAAC,EAAA,OAC9B,OAALF,QAAK,IAALA,GAAY,QAAPC,EAALD,EAAOG,aAAK,IAAAF,OAAP,EAALA,EAAcG,cAAcC,SAAc,QAANH,EAAC3B,SAAK,IAAA2B,OAAA,EAALA,EAAOE,cAAc,IAE5DhC,EAAkB0B,EACpB,GAAG,CAACvC,EAAQgB,IAQZ,OACE+B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,MAAOpC,EAAOqC,SARF,SAAAC,GACzB,IAAMC,EAAaD,EAAEE,OAAOJ,MAE5BjC,EAAgB,CAAEH,MADlBA,EAAQuC,GAEV,IAKKnD,IAAa8C,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eAChBzC,IAASuC,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,+BAA6BzC,EAAMiD,YAC9CjD,IAAUJ,IAAa8C,EAAAA,EAAAA,KAACQ,EAAAA,GAAU,CAAC1D,OAAQY,MAGnD,EAEA,W","sources":["pages/Movies/Movies.jsx"],"sourcesContent":["import { useState, useMemo, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesByQuery } from 'services/themoviedbAPI';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { MoviesList } from '../../components';\n\nexport const Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams({\n    query: '',\n  });\n\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n\n  let { query } = params;\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const data = await getMoviesByQuery(query);\n        setIsLoading(true);\n        setMovies(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [query]);\n\n  useEffect(() => {\n    const filtered = movies?.filter(movie =>\n      movie?.title?.toLowerCase().includes(query?.toLowerCase())\n    );\n    setFilteredMovies(filtered);\n  }, [movies, query]);\n\n  const handleSearchChange = e => {\n    const inputValue = e.target.value;\n    query = inputValue;\n    setSearchParams({ query: query });\n  };\n\n  return (\n    <>\n      <Searchbar value={query} onChange={handleSearchChange} />\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Oops, something went wrong: {error.message}</p>}\n      {!error && !isLoading && <MoviesList movies={filteredMovies} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Movies","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","_useState7","_useState8","filteredMovies","setFilteredMovies","_useSearchParams","useSearchParams","query","_useSearchParams2","searchParams","setSearchParams","useMemo","Object","fromEntries","_toConsumableArray","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","getMoviesByQuery","sent","t0","finish","stop","filtered","filter","movie","_movie$title","_query","title","toLowerCase","includes","_jsxs","_Fragment","children","_jsx","Searchbar","value","onChange","e","inputValue","target","message","MoviesList"],"sourceRoot":""}