{"version":3,"file":"static/js/364.ac746aa0.chunk.js","mappings":"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","sources":["pages/MoviesDetails/MoviesDetails.styled.js","pages/MoviesDetails/MoviesDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\nexport const InfoContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Poster = styled.img`\n  width: 250px;\n  height: 350px;\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.h3`\n  font-size: 24px;\n`;\n\nexport const InfoList = styled.div`\n  display: block;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  margin-left: 20px;\n`;\n\nexport const InfoItem = styled.div`\n  font-size: 18px;\n  margin-bottom: 20px;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const Vote = styled.span`\n  font-size: 18px;\n  color: ${props => (props.vote >= 7 ? 'green' : 'red')};\n`;\n\nexport const Overview = styled.p`\n  font-size: 14px;\n  margin-left: 20px;\n`;\n\nexport const Genres = styled.ul`\n  margin: 0;\n  margin-top: 14px;\n  margin-left: 20px;\n  padding: 0;\n  display: flex;\n  gap: 10px;\n  list-style: none;\n  font-size: 14px;\n`;\n","import { Suspense } from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { BackLink } from '../../components';\nimport { getMoviesById } from '../../services/themoviedbAPI';\nimport {\n  Container,\n  Poster,\n  InfoContainer,\n  Title,\n  InfoList,\n  InfoItem,\n  Vote,\n  Overview,\n  Genres,\n} from './MoviesDetails.styled';\n\nexport const MoviesDetails = () => {\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/goit-react-hw-05-movies';\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const data = await getMoviesById(movieId);\n        setIsLoading(true);\n        setMovieDetails(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [movieId]);\n\n  if (error) {\n    return alert('Something went wrong. Try again.');\n  } else if (isLoading) {\n    return <p>Loading...</p>;\n  } else if (!movieDetails) {\n    return <p>Sorry, no information about this movie.</p>;\n  } else {\n    const { poster_path, title, release_date, vote_average, genres, overview } =\n      movieDetails;\n\n    return (\n      <main>\n        <BackLink to={backLinkHref}>back to movies</BackLink>\n        <Container>\n          <InfoContainer>\n            <Poster\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/original${poster_path}`\n                  : 'https://dummyimage.com/300x450/000/fff&text=No+image'\n              }\n              alt={title}\n            />\n            <InfoList>\n              <Title>\n                {title} ({parseInt(release_date)})\n              </Title>\n              <InfoItem>\n                User Score: <Vote>{vote_average?.toFixed(1)}</Vote>\n              </InfoItem>\n              <InfoItem>\n                Overview <Overview>{overview}</Overview>\n              </InfoItem>\n              <InfoItem>\n                Genres\n                {genres && (\n                  <Genres>\n                    {genres.map(genre => (\n                      <li key={genre.id}>{genre.name},</li>\n                    ))}\n                  </Genres>\n                )}\n              </InfoItem>\n            </InfoList>\n          </InfoContainer>\n          <div>\n            <h4>Additional information</h4>\n            <ul>\n              <li>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n            </ul>\n            <Suspense fallback={<div>Loading subpage...</div>}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </Container>\n      </main>\n    );\n  }\n};\n\nexport default MoviesDetails;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","InfoContainer","_templateObject2","Poster","img","_templateObject3","Title","h3","_templateObject4","InfoList","_templateObject5","InfoItem","_templateObject6","Vote","span","_templateObject7","props","vote","Overview","p","_templateObject8","Genres","ul","_templateObject9","MoviesDetails","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","getMoviesById","sent","t0","finish","stop","alert","_jsx","children","poster_path","title","release_date","vote_average","genres","overview","_jsxs","BackLink","to","src","concat","alt","parseInt","toFixed","map","genre","name","id","Link","Suspense","fallback","Outlet"],"sourceRoot":""}